smoothFactor = 0) %>%
addPolygons(
label = lapply(labels, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "gray",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1)
bivariate_data<- function(x,y){
data <- tibble(yvar = y,
xvar = x
) %>%
mutate(y.val = case_when(
yvar <= 0.333 ~ 3,
yvar  > 0.333 & yvar <= 0.667  ~ 2,
yvar > 0.667 ~1
),
x.val= case_when(
xvar <= 0.333 ~ 1,
xvar  > 0.333 & yvar <= 0.667  ~ 2,
xvar > 0.667 ~3
),
color = case_when(
y.val == 1 & x.val == 1 ~ 7,
y.val == 1 & x.val == 2 ~ 8,
y.val == 1 & x.val == 3 ~ 9,
y.val == 2 & x.val == 1 ~ 4,
y.val == 2 & x.val == 2 ~ 5,
y.val == 2 & x.val == 3 ~ 6,
y.val == 3 & x.val == 1 ~ 1,
y.val == 3 & x.val == 2 ~ 2,
y.val == 3 & x.val == 3 ~ 3,
)
)
data$color
}
labels <-
paste0(
"State: ",
state_m$NAME, "<br/>",
"Regioan: ",
state_m$REGION, "<br/>",
"Trend Strength: ",
state_m$trend_strength, "<br/>",
"Seasonal Strength: ",
state_m$seasonal_strength_year) %>%
lapply(htmltools::HTML)
state_m %>%
leaflet(
width = "100%",
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("CartoDB") %>%
addPolygons(fillColor = state_m$trend_strength %>%
bivariate_data(state_m$seasonal_strength_year) %>% pal_bivariate(),
fillOpacity = 1,
stroke = FALSE,
smoothFactor = 0) %>%
addPolygons(
label = lapply(labels, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "gray",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1)
bivariate_data<- function(x,y){
data <- tibble(yvar = y,
xvar = x
) %>%
mutate(y.val = case_when(
yvar <= yvar %>% quantile(0.333) ~ 3,
yvar  > yvar %>% quantile(0.333) & yvar <= yvar %>% quantile(0.667)  ~ 2,
yvar > yvar %>% quantile(0.667) ~1
),
x.val= case_when(
xvar <= xvar %>% quantile(0.333) ~ 1,
xvar  > xvar %>% quantile(0.333) & xvar <= xvar %>% quantile(0.667)  ~ 2,
xvar > xvar %>% quantile(0.667) ~3
),
color = case_when(
y.val == 1 & x.val == 1 ~ 7,
y.val == 1 & x.val == 2 ~ 8,
y.val == 1 & x.val == 3 ~ 9,
y.val == 2 & x.val == 1 ~ 4,
y.val == 2 & x.val == 2 ~ 5,
y.val == 2 & x.val == 3 ~ 6,
y.val == 3 & x.val == 1 ~ 1,
y.val == 3 & x.val == 2 ~ 2,
y.val == 3 & x.val == 3 ~ 3,
)
)
data$color
}
labels <-
paste0(
"State: ",
state_m$NAME, "<br/>",
"Regioan: ",
state_m$REGION, "<br/>",
"Trend Strength: ",
state_m$trend_strength, "<br/>",
"Seasonal Strength: ",
state_m$seasonal_strength_year) %>%
lapply(htmltools::HTML)
state_m %>%
leaflet(
width = "100%",
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("CartoDB") %>%
addPolygons(fillColor = state_m$trend_strength %>%
bivariate_data(state_m$seasonal_strength_year) %>% pal_bivariate(),
fillOpacity = 1,
stroke = FALSE,
smoothFactor = 0) %>%
addPolygons(
label = lapply(labels, htmltools::HTML),
labelOptions = labelOptions(textsize = "12px"),
fillColor = NA,
fillOpacity = 0,
color = "gray",
weight = 1,
opacity = 1,
highlightOptions = highlightOptions(weight = 2)) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleepNote = F, sleepOpacity = 1)
legend_tirtile <- function(var1,var2) {
#legend y axis and x axis tirtile intervals
y = round(
c(min(var1,na.rm = T),
quantile(var1,c(0.333,0.667)),
max(var1,na.rm = T)),
0
)
z = c(paste0(y[1]," -", "\n",
"<",y[2]),
paste0(y[2]," -", "\n",
"<", y[3]),
paste0(y[3]," -", "\n",
y[4]))
yy = round(
c(min(var2,na.rm = T),
quantile(var2,c(0.333,0.667)),
max(var2,na.rm = T)),
0
)
zz = c(paste0(yy[1]," -", "\n",
"<",yy[2]),
paste0(yy[2]," -", "\n",
"<", yy[3]),
paste0(yy[3]," -", "\n",
yy[4]))
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strenth = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity() +
scale_x_discrete(limits=zz,
labels=zz)+
scale_y_discrete(limits=z,
labels=z)+
labs(y =  "Trend Strength →"
) +
theme(
axis.title = element_text(size = 20),
axis.title.x = element_text( size=30, face = "bold"),
axis.title.y = element_text( size=30, face = "bold"),
axis.line = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_text(face="bold", color="#000000", size=22),
axis.text.y = element_text(face="bold", color="#000000", size=22)
)
legend
}
legend = legend_tirtile(state_m$trend_strength, state_m$seasonal_strength_year) +
labs(x = "Seasonal Strength →")
legend
legend_tirtile <- function(var1,var2) {
#legend y axis and x axis tirtile intervals
y = round(
c(min(var1,na.rm = T),
quantile(var1,c(0.333,0.667)),
max(var1,na.rm = T)),
0
)
z = c(paste0(y[1]," -", "\n",
"<",y[2]),
paste0(y[2]," -", "\n",
"<", y[3]),
paste0(y[3]," -", "\n",
y[4]))
yy = round(
c(min(var2,na.rm = T),
quantile(var2,c(0.333,0.667)),
max(var2,na.rm = T)),
0
)
zz = c(paste0(yy[1]," -", "\n",
"<",yy[2]),
paste0(yy[2]," -", "\n",
"<", yy[3]),
paste0(yy[3]," -", "\n",
yy[4]))
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strenth = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity() +
scale_x_discrete(limits=zz,
labels=zz)+
scale_y_discrete(limits=z,
labels=z)+
labs(y =  "Trend Strength →"
) +
theme(
axis.title = element_text(size = 20),
axis.title.x = element_text( size=30, face = "bold"),
axis.title.y = element_text( size=30, face = "bold"),
axis.line = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_text(face="bold", color="#000000", size=22),
axis.text.y = element_text(face="bold", color="#000000", size=22)
)
legend
}
legend_tirtile <- function(var1,var2) {
#legend y axis and x axis tirtile intervals
y = round(
c(min(var1,na.rm = T),
quantile(var1,c(0.333,0.667)),
max(var1,na.rm = T)),
0
)
z = c(paste0(y[1]," -", "\n",
"<",y[2]),
paste0(y[2]," -", "\n",
"<", y[3]),
paste0(y[3]," -", "\n",
y[4]))
yy = round(
c(min(var2,na.rm = T),
quantile(var2,c(0.333,0.667)),
max(var2,na.rm = T)),
0
)
zz = c(paste0(yy[1]," -", "\n",
"<",yy[2]),
paste0(yy[2]," -", "\n",
"<", yy[3]),
paste0(yy[3]," -", "\n",
yy[4]))
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity() +
scale_x_discrete(limits=zz,
labels=zz)+
scale_y_discrete(limits=z,
labels=z)+
labs(y =  "Trend Strength →"
) +
theme(
axis.title = element_text(size = 20),
axis.title.x = element_text( size=30, face = "bold"),
axis.title.y = element_text( size=30, face = "bold"),
axis.line = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_text(face="bold", color="#000000", size=22),
axis.text.y = element_text(face="bold", color="#000000", size=22)
)
legend
}
legend = legend_tirtile(state_m$trend_strength, state_m$seasonal_strength_year) +
labs(x = "Seasonal Strength →")
legend
min(state_m$trend_strength, na.rm = T)
quantile(state_m$trend_strength, c(0.333,0.667))
max(state_m$trend_strength, na.rm=T)
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
legend_scale
data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity()
legend_tirtile <- function(var1,var2) {
#legend y axis and x axis tirtile intervals
y = round(
c(min(var1,na.rm = T),
quantile(var1,c(0.333,0.667)),
max(var1,na.rm = T)),
0
)
z = c(paste0(y[1]," -", "\n",
"<",y[2]),
paste0(y[2]," -", "\n",
"<", y[3]),
paste0(y[3]," -", "\n",
y[4]))
yy = round(
c(min(var2,na.rm = T),
quantile(var2,c(0.333,0.667)),
max(var2,na.rm = T)),
0
)
zz = c(paste0(yy[1]," -", "\n",
"<",yy[2]),
paste0(yy[2]," -", "\n",
"<", yy[3]),
paste0(yy[3]," -", "\n",
yy[4]))
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity() +
scale_x_discrete(limits=zz,
labels=zz)+
scale_y_discrete(limits=z,
labels=z)+
labs(y =  "Trend Strength →"
) +
theme(
axis.title = element_text(size = 20),
axis.title.x = element_text( size=30, face = "bold"),
axis.title.y = element_text( size=30, face = "bold"),
axis.line = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_text(face="bold", color="#000000", size=22),
axis.text.y = element_text(face="bold", color="#000000", size=22)
)
legend
}
legend = legend_tirtile(state_m$trend_strength, state_m$seasonal_strength_year) +
labs(x = "Seasonal Strength →")
legend
legend_tirtile <- function(var1,var2) {
#legend y axis and x axis tirtile intervals
y = round(
c(min(var1,na.rm = T),
quantile(var1,c(0.333,0.667)),
max(var1,na.rm = T)),
2
)
z = c(paste0(y[1]," -", "\n",
"<",y[2]),
paste0(y[2]," -", "\n",
"<", y[3]),
paste0(y[3]," -", "\n",
y[4]))
yy = round(
c(min(var2,na.rm = T),
quantile(var2,c(0.333,0.667)),
max(var2,na.rm = T)),
2
)
zz = c(paste0(yy[1]," -", "\n",
"<",yy[2]),
paste0(yy[2]," -", "\n",
"<", yy[3]),
paste0(yy[3]," -", "\n",
yy[4]))
#legend data frame
legend_scale <- data.frame(
co_var = c(rep(1, 3), rep(2, 3), rep(3, 3)),
trend.strength = c(rep(seq(1, 3, 1), 3)),
color = c("#F1F1F1", "#C3DEEE", "#A1D3EA",
"#F7DBE7", "#CAC8E3", "#A6BDDF",
"#F7C1CB", "#CAAEC8", "#A6A3C4")
)
# legend
legend <- ggplot() +
geom_tile(
data = legend_scale,
aes(x = co_var, y = trend.strength, fill = color)) +
scale_fill_identity() +
scale_x_discrete(limits=zz,
labels=zz)+
scale_y_discrete(limits=z,
labels=z)+
labs(y =  "Trend Strength →"
) +
theme(
axis.title = element_text(size = 20),
axis.title.x = element_text( size=30, face = "bold"),
axis.title.y = element_text( size=30, face = "bold"),
axis.line = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.margin = margin(10, 10, 10, 10),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_text(face="bold", color="#000000", size=22),
axis.text.y = element_text(face="bold", color="#000000", size=22)
)
legend
}
legend = legend_tirtile(state_m$trend_strength, state_m$seasonal_strength_year) +
labs(x = "Seasonal Strength →")
legend
ggsave("/Users/stevenlawrence/Desktop/cumc_github/sl4269.github.io/SBL_Global_TS.svg",  plot = legend,  width = 8, height = 6, bg = "transparent")
# global default settings for chunks
knitr::opts_chunk$set( eval = TRUE, warning = FALSE, message = FALSE,
# fig.dim = c(6, 3)
fig.width = 9,
fig.height = 5,
dpi = 144,
fig.pos = "!h"
)
Packages <- c("tidyverse", "arsenal", "readxl",
"patchwork", "GGally", "ghibli",
"plotly","ggpubr","gridExtra",
"pastecs","DataCombine", "ggrepel",
"tseries","kableExtra","viridis",
"RColorBrewer", "fabletools", "gtrendsR",
"fpp3","tsibble", "formattable", "forecast",
"glue")
invisible(lapply(Packages, library, character.only = TRUE))
# theme global setting for ggplot
#theme_set(theme_minimal() +
#            theme(legend.position = "bottom") +
#           theme(plot.title = element_text(hjust = 0.5, size = 12),
#                plot.subtitle = element_text(hjust = 0.5, size = 8))
#         )
s
