filter(state %in% c("NY","CA","TX","NJ")) %>%
gg_subseries(hits)
states_q <- states %>%
#tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearquater = yearquarter(date)) %>%
select(-date) %>%
group_by(yearquater, state) %>%
summarise(hits = sum(hits)) %>%
arrange(state) %>%
as_tsibble(index = yearquater, key = state)
state_region <- tibble(
name = c(state.name,"DistrictofColumbia"),
region = c(as.character(state.region), "South"),
state = c(state.abb, "DC")
)
states_q <- left_join(states_q, state_region, by = "state")
states_q %>%
filter(state %in% c("NY","CA","TX","NJ")) %>%
gg_subseries(hits)
# global default settings for chunks
knitr::opts_chunk$set( eval = TRUE, warning = FALSE, message = FALSE,
# fig.dim = c(6, 3)
fig.width = 9,
fig.height = 5,
dpi = 144,
fig.pos = "!h"
)
Packages <- c("tidyverse", "arsenal", "readxl",
"patchwork", "GGally", "ghibli",
"plotly","ggpubr","gridExtra",
"pastecs","DataCombine", "ggrepel",
"tseries","kableExtra","viridis",
"RColorBrewer", "fabletools", "gtrendsR",
"fpp3","tsibble", "formattable", "forecast",
"glue")
invisible(lapply(Packages, library, character.only = TRUE))
# theme global setting for ggplot
#theme_set(theme_minimal() +
#            theme(legend.position = "bottom") +
#           theme(plot.title = element_text(hjust = 0.5, size = 12),
#                plot.subtitle = element_text(hjust = 0.5, size = 8))
#         )
# global default settings for chunks
knitr::opts_chunk$set( eval = TRUE, warning = FALSE, message = FALSE,
# fig.dim = c(6, 3)
fig.width = 9,
fig.height = 5,
dpi = 144,
fig.pos = "!h"
)
Packages <- c("tidyverse", "arsenal", "readxl",
"patchwork", "GGally", "ghibli",
"plotly","ggpubr","gridExtra",
"pastecs","DataCombine", "ggrepel",
"tseries","kableExtra","viridis",
"RColorBrewer", "fabletools", "gtrendsR",
"fpp3","tsibble", "formattable", "forecast",
"glue")
invisible(lapply(Packages, library, character.only = TRUE))
# theme global setting for ggplot
#theme_set(theme_minimal() +
#            theme(legend.position = "bottom") +
#           theme(plot.title = element_text(hjust = 0.5, size = 12),
#                plot.subtitle = element_text(hjust = 0.5, size = 8))
#         )
state_time <- function(x){
state1 <- gtrends(keyword = "skin bleaching", geo = x[1:5], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state2 <- gtrends(keyword = "skin bleaching", geo = x[6:10], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state3 <- gtrends(keyword = "skin bleaching", geo = x[11:15], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state4 <- gtrends(keyword = "skin bleaching", geo = x[16:20], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state5 <- gtrends(keyword = "skin bleaching", geo = x[21:25], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state6 <- gtrends(keyword = "skin bleaching", geo = x[26:30], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state7 <- gtrends(keyword = "skin bleaching", geo = x[31:35], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state8 <- gtrends(keyword = "skin bleaching", geo = x[36:40], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state9 <- gtrends(keyword = "skin bleaching", geo = x[41:45], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state10 <- gtrends(keyword = "skin bleaching", geo = x[46:50], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state11 <- gtrends(keyword = "skin bleaching", geo = x[51], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
rbind(
state1$interest_over_time,
state2$interest_over_time,
state3$interest_over_time,
state4$interest_over_time,
state5$interest_over_time,
state6$interest_over_time,
state7$interest_over_time,
state8$interest_over_time,
state9$interest_over_time,
state10$interest_over_time,
state11$interest_over_time)
}
rbind(
state1$interest_over_time,
state2$interest_over_time,
state3$interest_over_time,
state4$interest_over_time,
state5$interest_over_time,
state6$interest_over_time,
state7$interest_over_time,
state8$interest_over_time,
state9$interest_over_time,
state10$interest_over_time,
state11$interest_over_time)
states <- map(statedf, state_time)
state_time <- function(x){
state1 <- gtrends(keyword = "skin bleaching", geo = x[1:5], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state2 <- gtrends(keyword = "skin bleaching", geo = x[6:10], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state3 <- gtrends(keyword = "skin bleaching", geo = x[11:15], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state4 <- gtrends(keyword = "skin bleaching", geo = x[16:20], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state5 <- gtrends(keyword = "skin bleaching", geo = x[21:25], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state6 <- gtrends(keyword = "skin bleaching", geo = x[26:30], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state7 <- gtrends(keyword = "skin bleaching", geo = x[31:35], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state8 <- gtrends(keyword = "skin bleaching", geo = x[36:40], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state9 <- gtrends(keyword = "skin bleaching", geo = x[41:45], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state10 <- gtrends(keyword = "skin bleaching", geo = x[46:50], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state11 <- gtrends(keyword = "skin bleaching", geo = x[51], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
rbind(
state1$interest_over_time,
state2$interest_over_time,
state3$interest_over_time,
state4$interest_over_time,
state5$interest_over_time,
state6$interest_over_time,
state7$interest_over_time,
state8$interest_over_time,
state9$interest_over_time,
state10$interest_over_time,
state11$interest_over_time)
}
states <- map(statedf, state_time)
# global default settings for chunks
knitr::opts_chunk$set( eval = TRUE, warning = FALSE, message = FALSE,
# fig.dim = c(6, 3)
fig.width = 9,
fig.height = 5,
dpi = 144,
fig.pos = "!h"
)
Packages <- c("tidyverse", "arsenal", "readxl",
"patchwork", "GGally", "ghibli",
"plotly","ggpubr","gridExtra",
"pastecs","DataCombine", "ggrepel",
"tseries","kableExtra","viridis",
"RColorBrewer", "fabletools", "gtrendsR",
"fpp3","tsibble", "formattable", "forecast",
"glue")
invisible(lapply(Packages, library, character.only = TRUE))
# theme global setting for ggplot
#theme_set(theme_minimal() +
#            theme(legend.position = "bottom") +
#           theme(plot.title = element_text(hjust = 0.5, size = 12),
#                plot.subtitle = element_text(hjust = 0.5, size = 8))
#         )
state1<- vector(mode ="logical")
state2<- vector(mode ="logical")
state3<- vector(mode ="logical")
state4<- vector(mode ="logical")
state5<- vector(mode ="logical")
state6<- vector(mode ="logical")
state7<- vector(mode ="logical")
state8<- vector(mode ="logical")
state9<- vector(mode ="logical")
state10<- vector(mode ="logical")
state11<- vector(mode ="logical")
state_time <- function(x){
state1 <- gtrends(keyword = "skin bleaching", geo = x[1:5], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state2 <- gtrends(keyword = "skin bleaching", geo = x[6:10], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state3 <- gtrends(keyword = "skin bleaching", geo = x[11:15], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state4 <- gtrends(keyword = "skin bleaching", geo = x[16:20], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state5 <- gtrends(keyword = "skin bleaching", geo = x[21:25], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state6 <- gtrends(keyword = "skin bleaching", geo = x[26:30], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state7 <- gtrends(keyword = "skin bleaching", geo = x[31:35], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state8 <- gtrends(keyword = "skin bleaching", geo = x[36:40], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state9 <- gtrends(keyword = "skin bleaching", geo = x[41:45], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state10 <- gtrends(keyword = "skin bleaching", geo = x[46:50], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
state11 <- gtrends(keyword = "skin bleaching", geo = x[51], time = "2008-01-01 2018-12-31", low_search_volume = T, gprop = "web")
rbind(
state1$interest_over_time,
state2$interest_over_time,
state3$interest_over_time,
state4$interest_over_time,
state5$interest_over_time,
state6$interest_over_time,
state7$interest_over_time,
state8$interest_over_time,
state9$interest_over_time,
state10$interest_over_time,
state11$interest_over_time)
}
states <- map(statedf, state_time)
statedf <- c(state.abb, "DC") %>%
tibble(states = .) %>%
mutate(country = rep("US", 51)) %>%
select(country, states) %>%
unite("region" , country:states,  sep = "-")
# global default settings for chunks
knitr::opts_chunk$set( eval = TRUE, warning = FALSE, message = FALSE,
# fig.dim = c(6, 3)
fig.width = 9,
fig.height = 5,
dpi = 144,
fig.pos = "!h"
)
Packages <- c("tidyverse", "arsenal", "readxl",
"patchwork", "GGally", "ghibli",
"plotly","ggpubr","gridExtra",
"pastecs","DataCombine", "ggrepel",
"tseries","kableExtra","viridis",
"RColorBrewer", "fabletools", "gtrendsR",
"fpp3","tsibble", "formattable", "forecast",
"glue")
invisible(lapply(Packages, library, character.only = TRUE))
# theme global setting for ggplot
#theme_set(theme_minimal() +
#            theme(legend.position = "bottom") +
#           theme(plot.title = element_text(hjust = 0.5, size = 12),
#                plot.subtitle = element_text(hjust = 0.5, size = 8))
#         )
##########################################3
states <- read_csv("./statesTS.csv")
names(states) <- substring(names(states), 8)
#adding regions to data set
states %>%
#tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
filter(state %in% c("NY","CA","TX","NJ")) %>%
gg_subseries(hits)
dcmp <- states %>%
# tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
#filter(state %in% c("NY","CA","NJ","TX")) %>%
model(stl = STL(hits ~ season(window = 13) + trend(window = 10), robust = T)) %>%
components()
states %>%
#  tibble() %>%
#  unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
# filter(state %in% c("NY","CA","NJ","TX")) %>%
autoplot(hits) +
theme(legend.position = "none") +
autolayer(dcmp, trend,col = "blue", alpha = 2)
dcmp %>% autoplot()
states_q %>%
autoplot(hits) +
theme(legend.position = "none") +
autolayer(dcmp, trend,col = "blue", alpha = 2)
`%notin%` <- Negate(`%in%`)
test_s <-  states %>%
# tibble() %>%
# unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) #%>%
# filter(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"))
#seasonal and trend strength
q1 <- states_q %>% #data by quarter
mutate(region = as_factor(region)) %>%
features(hits, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year)) +
geom_point(#aes(
#  col = ifelse(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"), "blue","red"),
#  col = region)
) +
geom_label_repel(
aes(label = state ),
data =  . %>% filter(state  %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI")),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50',
size = 3
) +
#   theme(legend.position = "none")+
scale_fill_viridis_d(aes(col = region))
states_q <- left_join(states_q, state_region, by = "state")
states_q <- states %>%
#tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearquater = yearquarter(date)) %>%
select(-date) %>%
group_by(yearquater, state) %>%
summarise(hits = sum(hits)) %>%
arrange(state) %>%
as_tsibble(index = yearquater, key = state)
#adding regions to data set
states %>%
#tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
filter(state %in% c("NY","CA","TX","NJ")) %>%
gg_subseries(hits)
states_q <- states %>%
#tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearquater = yearquarter(date)) %>%
select(-date) %>%
group_by(yearquater, state) %>%
summarise(hits = sum(hits)) %>%
arrange(state) %>%
as_tsibble(index = yearquater, key = state)
state_region <- tibble(
name = c(state.name,"DistrictofColumbia"),
region = c(as.character(state.region), "South"),
state = c(state.abb, "DC")
)
states_q <- left_join(states_q, state_region, by = "state")
states_q %>%
filter(state %in% c("NY","CA","TX","NJ")) %>%
gg_subseries(hits)
dcmp <- states %>%
# tibble() %>%
#unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
#filter(state %in% c("NY","CA","NJ","TX")) %>%
model(stl = STL(hits ~ season(window = 13) + trend(window = 10), robust = T)) %>%
components()
states %>%
#  tibble() %>%
#  unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) %>%
# filter(state %in% c("NY","CA","NJ","TX")) %>%
autoplot(hits) +
theme(legend.position = "none") +
autolayer(dcmp, trend,col = "blue", alpha = 2)
dcmp %>% autoplot()
states_q %>%
autoplot(hits) +
theme(legend.position = "none") +
autolayer(dcmp, trend,col = "blue", alpha = 2)
dcmp2 <- states_q %>%
model(stl = STL(hits ~ season(window = 13) + trend(window = 10), robust = T)) %>%
components()
dcmp2 %>% autoplot() +
theme(legend.position = "none")
#dcmp %>% gg_subseries(season_year)
#dcmp %>% gg_season(hits, label = "right")
`%notin%` <- Negate(`%in%`)
test_s <-  states %>%
# tibble() %>%
# unnest() %>%
separate(geo, into = c("country","state")) %>%
select(date,hits,state) %>%
mutate(yearmonth = yearmonth(date)) %>%
select(-date) %>%
as_tsibble(index = yearmonth, key = state) #%>%
# filter(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"))
#seasonal and trend strength
q1 <- states_q %>% #data by quarter
mutate(region = as_factor(region)) %>%
features(hits, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year)) +
geom_point(#aes(
#  col = ifelse(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"), "blue","red"),
#  col = region)
) +
geom_label_repel(
aes(label = state ),
data =  . %>% filter(state  %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI")),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50',
size = 3
) +
#   theme(legend.position = "none")+
scale_fill_viridis_d(aes(col = region))
q2 <- states_q %>% #data by quarter
mutate(region = as_factor(region)) %>%
features(hits, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year)) +
geom_point(#aes(
#  col = ifelse(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"), "blue","red"),
#  col = region)
) +
geom_label_repel(
aes(label = state ),
data =  . %>% filter(trend_strength > 0.6 & seasonal_strength_year > 0.4),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50',
size = 3
) +
#   theme(legend.position = "none")+
scale_fill_viridis_d(aes(col = region))
##################################################
most_seasonal <- states_q %>%
features(hits, feat_stl) %>%
filter(trend_strength %notin% NaN ) %>%
filter(seasonal_strength_year == max(seasonal_strength_year))
t1<-  states_q %>%
right_join(most_seasonal, by =c("state")) %>%
ggplot(aes(x = yearquater, y = hits)) + geom_line()+
ggtitle("Texus")
most_trend <- states_q %>%
features(hits, feat_stl) %>%
filter(trend_strength %notin% NaN ) %>%
filter(trend_strength == max(trend_strength))
c1<- states_q %>%
right_join(most_trend, by = c("state")) %>%
ggplot(aes(x = yearquater, y = hits)) + geom_line() +
ggtitle("California")
q1 + q2
t1 +c1
#peak hit for each region
test_features <- states_q %>%
features(hits, feature_set(pkgs = "feasts"))
# states that don't have information
states_nan <- test_features  %>%
filter(is.nan(trend_strength)) %>%
select(state)
# making a data frame that includes regions
#marking problematic states with constant zeroes
test_feature_r <- left_join(test_features, state_region, by= "state" ) %>%
filter(trend_strength %notin% NaN)
test_feature_r %>%
select_at(vars(contains("season"), region)) %>%
mutate(
seasonal_peak_year = glue::glue("Q{seasonal_peak_year+1}"),
seasonal_trough_year = glue::glue("Q{seasonal_trough_year+1}"),
) %>%
GGally::ggpairs(mapping = aes(colour=region))
#principal component analysis
pcs <- test_feature_r %>%
select(-state, -region, -name ) %>%
filter(!is.nan(trend_strength)) %>%
prcomp(scale=F) %>%
broom::augment(test_feature_r)
customGreen0 = "#DeF7E9"
customGreen = "#71CA97"
customRed = "#ff7f7f"
head(pcs) %>%
select(state, trend_strength, seasonal_strength_year, seasonal_peak_year) %>%
formattable(align= c("l","c","c","c"),
list(`state` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold")),
`trend_strength` = color_bar(customGreen0),
`seasonal_strength_year` = color_bar(customGreen0))
)
# How related are the time series
s1 <- pcs %>%
mutate(state = as_factor(state)) %>%
ggplot( aes(x = .fittedPC1,
y = .fittedPC2,
group = ifelse(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"),"red","black" ),
col = region
)
) +
geom_point(aes(label = state #,
#col = ifelse(state %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI"),"red","black" )
)
)+
geom_label_repel(
data =  . %>% filter(state  %in% c("NY","CA","NJ","TX","MD","DC","NV","GA", "FL","MI")),
aes(label = state),
box.padding   = 0.5,
point.padding = 0.5,
segment.color = 'grey50',
size = 2) +
theme(legend.position = "none", aspect.ratio = 1)
r1 <- pcs %>%
ggplot(aes(x = .fittedPC1, y =.fittedPC2, col = region)) +
geom_point() +
geom_label_repel(aes(label = state),
data =  . %>% filter(.fittedPC1 > 4000 | .fittedPC2 < -500),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50',
size = 2) +
theme(legend.position = "right",
aspect.ratio = 1)
s1 + r1
# extracting outliers
outliers <- pcs %>%
filter(.fittedPC1 > 4000 | .fittedPC2 < -500)
#ploting outliers
outliers %>% left_join(states_q, by = c("state","region")) %>%
mutate(series = glue("{state}","{region}", .sep = "\n")) %>%
ggplot(aes(x = yearquater, y = hits/max(hits)))+geom_line()+
facet_grid(series ~.)+
ggtitle("Outlying time series in PC space")
